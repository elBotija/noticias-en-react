{"version":3,"sources":["components/Header.js","components/Noticia.js","components/Noticias.js","components/Formulario.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","href","title","Noticia","_props$noticia","noticia","description","url","urlToImage","imagen","src","alt","target","Noticias","react_transition_group","this","noticias","map","key","classNames","timeout","components_Noticia","Component","Formulario","categoriaRef","React","createRef","cambiarCategoria","e","preventDefault","console","log","_this","current","value","consultarNoticias","onSubmit","ref","defaultValue","type","App","state","categoria","arguments","length","undefined","concat","fetch","then","respuesta","json","setState","articles","components_Header","components_Formulario","components_Noticias","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8a946222.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Header = (props) => {\n    return(\n        <nav>\n            <div className=\"nav-wrapper light-green lighten-2\">\n                <a href='/' className=\"brand-logo center\">{props.title}</a>\n            </div>\n        </nav>\n    )\n}\n\nHeader.propTypes={\n    title: PropTypes.string.isRequired\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Noticia = (props) => {\n    const { description, title, url, urlToImage } = props.noticia\n    const imagen = (urlToImage) ?\n        <div className=\"card-image\">\n          <img src={urlToImage} alt={title} />\n        </div>\n    :   ''\n    \n    return(\n        <div className=\"col s12 m4\">\n          <div className=\"card\">\n            {imagen}\n            <div className=\"card-content\">\n              <span className=\"card-title\">{title}</span>\n              <p>{description}</p>\n            </div>\n            <div className=\"card-action\">\n              <a href={url} target=\"_blanck\">Ir a la nota</a>\n            </div>\n          </div>\n        </div>\n    )\n}\n\nNoticia.propTypes = {\n    noticia: PropTypes.shape({\n        description: PropTypes.string.isRequired,\n        title: PropTypes.string.isRequired,\n        url: PropTypes.string.isRequired,\n        urlToImage: PropTypes.string.isRequired\n    })\n}\n\nexport default Noticia\n","import React, { Component } from 'react'\nimport Noticia from './Noticia'\nimport PropTypes from 'prop-types'\nimport {TransitionGroup, CSSTransition} from 'react-transition-group'\n\nclass Noticias extends Component{\n    render(){\n        return(\n            <div className=\"row\">\n                <TransitionGroup>\n                    {this.props.noticias.map( noticia => (\n                        <CSSTransition\n                            key={noticia.url}\n                            classNames='fade'\n                            timeout={500}\n                        >\n                            <Noticia noticia={noticia} />\n                        </CSSTransition>\n                    ))}\n                </TransitionGroup>\n            </div>\n        )\n    }\n}\n\nNoticias.propTypes = {\n    noticias: PropTypes.array.isRequired\n}\n\nexport default Noticias\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nclass Formulario extends Component {\n\n    categoriaRef = React.createRef()\n\n    cambiarCategoria = (e) => {\n        e.preventDefault()\n        console.log(this.categoriaRef.current.value)\n        this.props.consultarNoticias(this.categoriaRef.current.value)\n    }\n\n    render(){\n        return(\n            <div className='buscador row'>\n                <div className='s12 col m8 offset-m2'>\n                    <form onSubmit={this.cambiarCategoria}>\n                        <h2>Noticas por Categoria</h2>\n                        <div className='input-field col s12 m8'>\n                            <select ref={this.categoriaRef}>\n                                <option value='general' defaultValue> General </option>\n                                <option value='business' defaultValue> Negocios </option>\n                                <option value='entertainment' defaultValue> Entretenimiento </option>\n                                <option value='science' defaultValue> Ciencia </option>\n                                <option value='sports' defaultValue> Deportes </option>\n                                <option value='technology' defaultValue> Tecnologia </option>\n                            </select>\n                        </div>\n                        <div className='input-field col s12 m4'>\n                            <input type=\"submit\" className='btn light-green lighten-2' value=\"Buscar\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nFormulario.propTypes = {\n    consultarNoticias: PropTypes.func.isRequired\n}\n\nexport default Formulario\n","import React, { Component } from 'react'\nimport Header from './components/Header'\nimport Noticias from './components/Noticias'\nimport Formulario from './components/Formulario'\n\nclass App extends Component {\n\n    state = {\n        noticias: []\n    }\n\n    componentDidMount(){\n        this.consultarNoticias()\n    }\n\n    consultarNoticias = (categoria = 'general') => {\n        let url = `https://newsapi.org/v2/top-headlines?country=ar&category=${categoria}&apiKey=7dcb6361a1ce414d887a4547ca1a71be`\n\n        fetch(url)\n            .then(respuesta => {\n                return respuesta.json()\n            })\n            .then(noticias => {\n                this.setState({\n                    noticias: noticias.articles\n                })\n            })\n    }\n\n    render() {\n        return (\n            <div className=\"contenedor-app\">\n                <Header\n                    title='Noticias'\n                />\n                <div className=\"container white contenedor-noticias\">\n                    <Formulario\n                        consultarNoticias={this.consultarNoticias}\n                    />\n                    <Noticias\n                        noticias={this.state.noticias}\n                    />\n                </div>\n                <p className='center'><i>Powered by <a href='https://newsapi.org/'>NewsAPI.org</a></i></p>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}